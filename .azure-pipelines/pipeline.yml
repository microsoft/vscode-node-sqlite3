name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - release/vscode
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: microsoft/vscode-engineering
      ref: main
      endpoint: Monaco

parameters:
  - name: publishPackage
    displayName: ðŸš€ Publish @vscode/sqlite3
    type: boolean
    default: false

extends:
  template: azure-pipelines/npm-package/pipeline.yml@templates
  parameters:
    npmPackages:
      - name: sqlite3

        buildSteps:
          - script: |
              set -e
              includes=$(cat << 'EOF'
              {
                "target_defaults": {
                  "conditions": [
                    ["OS=='linux'", {
                      'cflags_cc!': [ '-std=gnu++20' ],
                      'cflags_cc': [ '-std=gnu++2a' ],
                    }]
                  ]
                }
              }
              EOF
              )
              if [ ! -d "$HOME/.gyp" ]; then
                mkdir -p "$HOME/.gyp"
              fi
              echo "$includes" > "$HOME/.gyp/include.gypi"
            displayName: Override gnu target for older sysroot
            condition: eq(variables['Agent.OS'], 'Linux')

          - script: yarn install
            displayName: Install and build

        testSteps:
          - script: |
              set -e
              includes=$(cat << 'EOF'
              {
                "target_defaults": {
                  "conditions": [
                    ["OS=='linux'", {
                      'cflags_cc!': [ '-std=gnu++20' ],
                      'cflags_cc': [ '-std=gnu++2a' ],
                    }]
                  ]
                }
              }
              EOF
              )
              if [ ! -d "$HOME/.gyp" ]; then
                mkdir -p "$HOME/.gyp"
              fi
              echo "$includes" > "$HOME/.gyp/include.gypi"
            displayName: Override gnu target for older sysroot
            condition: eq(variables['Agent.OS'], 'Linux')

          - script: yarn install
            displayName: Install and build

          - script: yarn test
            displayName: Test npm package

        apiScanSoftwareName: 'vscode-sqlite3'
        apiScanSoftwareVersion: '5.1'

        publishPackage: ${{ parameters.publishPackage }}
